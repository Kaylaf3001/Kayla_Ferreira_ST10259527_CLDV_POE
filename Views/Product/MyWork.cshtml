@model int  // We only need to pass userID to this view

@{
    ViewData["Title"] = "Home Page";
    var userID = ViewData["userID"];
    var products = ViewData["Products"] as List<POE_CloudDev.Models.ProductsTable>;
}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">

    @* //------------------------------------------------------------------------------------------------------------- *@
    @* CSS Page*@
    @* //------------------------------------------------------------------------------------------------------------- *@

    <style>
        body, html {
           
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: cover;
            margin: 0;
            padding: 0;
            padding-bottom: 50px;
        }

        h1, h2 {
            text-align: center;
            padding: 10px;
            font-weight: bold;
            color: black;

        }

        h2 {
            text-align: center;
            color: black;
            font-size: 20px;
        }

        .card-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            max-width: 300px;
            margin: auto;
            text-align: center;
            font-family: arial;
            border-radius: 8px;
            margin-top: 20px;
        }
        .description {
            width: 100%;
            height: 100px
        }
        .price {
            color: grey;
            font-size: 22px;
        }

        .card button {
            border: none;
            outline: 0;
            padding: 12px;
            color: white;
            background-color: #000;
            text-align: center;
            cursor: pointer;
            width: 100%;
            font-size: 18px;
        }

        .product-image {
            width: 300px;
            height: 400px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 20px;
        }
       
        .modal {
            display: none; 
            position: fixed; 
            z-index: 1; 
            left: 0;
            top: 0;
            width: 100%;
            height: 100%; 
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
        }
     
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto; 
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

            .card button:hover {
                opacity: 0.7;
            }

        .footer {
            background-color: rgba(23, 23, 23,0.2);
            text-align: center;
            color: white;
        }  
        .listing-button-container {
            text-align: center; /* Center the button */
            margin-top: 20px; /* Add some spacing */
        }

        .listing-button {
            background-color: blue;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .listing-button:hover {
                background-color: darkblue; /* Change color on hover */
            }
    </style>
    </head>
@* //------------------------------------------------------------------------------------------------------------- *@

 @* //------------------------------------------------------------------------------------------------------------- *@
 @* HTML - Creates the cards that have been either been entered by users or hard coded in from the database*@
 @* //------------------------------------------------------------------------------------------------------------- *@
<body>

    <nav>
        <!-- existing navigation links -->
       
    </nav>

    @* Calling the userId*@
    <div class="container">
        <h1>My Shop</h1>
        @if (userID != null)
        {
            <h1>Welcome User: @userID</h1>
        }

        <div class="card-container">
            @foreach (var product in products)
            {
                <form id="form@product.ProductID" action="PlaceOrder" method="post">
                    <div class="card">
                        <img class="product-image" src="@product.ImageUrl" alt="@product.Name">
                        <h2>@product.Name</h2>
                        <p class="price">@product.Price</p>
                        <div class="description">
                        <p>@product.Description</p>
                       </div>
                        <div class="button">
                            <input type="hidden" name="productID" value="@product.ProductID" />
                            <button type="button" class="place-order-btn" data-product-id="@product.ProductID">Place Order</button>
                        </div>
                    </div>
                </form>
            }
            
        </div>
    </div>

        @* //------------------------------------------------------------------------------------------------------------- *@
        @* Javascript - This is a pop up also known as a dialog box that will pop up  when place order is clicked*@
        @* //------------------------------------------------------------------------------------------------------------- *@
        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            // Get the modal and the confirm button
            // Get all the buttons that submit the form
            var btns = document.getElementsByClassName("place-order-btn");

            // When the user clicks on any button, show a confirmation dialog
            for (var i = 0; i < btns.length; i++) {
                btns[i].onclick = function (event) {
                    event.preventDefault(); // Prevent the form from submitting
                    // Show a confirmation dialog
                    Swal.fire({
                        title: 'Are you sure you want to place this order?',
                        showDenyButton: true,
                        confirmButtonText: `Yes`,
                        denyButtonText: `No`,
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (result.isConfirmed) {
                            this.form.submit(); // Submit the form
                        }
                    })
                }
            }
        </script>
        @* //------------------------------------------------------------------------------------------------------------- *@
    </body>
</html>
